#include <stdio.h>
#include <stdlib.h>
#define USERDEF AAAAAA


char msg[] = \
"This exercise is an introduction to debugging with GDB .\n"
"First, you must find if the password type is a string, decimal,\n"
"or, hexidecimal. Set a breakpoint at desired hex address or\n"
"line of function, example: 'b *0xfffffff' or 'b *main+001'\n"
"Once at breakpoint, to view what is stored in registers,\n"
"hex addresses, or variables you need to use either 'x/?' or 'p/?'\n"
"The 'x/' shows the contents of a memory address and 'p/' shows\n"
"the value stored in a named variable.\n"
"The ? can be replaced with 's' for string, 'x' for hex, and 'd'\n"
"for decimal. Next, set a breakpoint where you think the password\n"
"is compared. You can continue to this next breakpoint with 'c'\n"
"which stands for 'continue'. This will run the program to the next\n"
"breakpoint. You can all also move along the program with 'ni' which\n"
"stands for 'next instruction'. Then, try and to display the\n"
"in gdb.\n\n"
"Good Luck!\n\n"
;

void print_msg() {
  printf("%s",msg);
}

void print_good() {
  printf("Good Job.\n");
  exit(0);
}

void print_nogood() {
  printf("Try again.\n");
}

int manipulate(int password){
  int remainder, reverse = 0; 
  while(password != 0){
    remainder = password%10;
    reverse = reverse*10+remainder;
    password /= 10;
  }
  return reverse;
}


int main(int argc, char* argv[]){
  int input;
  int pass = USERDEF;
 
  printf("USERDEF = %d\n", USERDEF);  
  print_msg();

  printf("Enter the password: ");
  scanf("%d", &input);

  pass = manipulate(USERDEF);

  printf("password = %d\n", pass);  
  if(input == pass)
    print_good();
  else
    print_nogood();

  return 0;
}
